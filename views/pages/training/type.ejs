<!-- Training content type filter view -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">

<style>
  .content-card {
    transition: all 0.3s ease;
    border-radius: 12px;
    overflow: hidden;
  }
  
  .content-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
  
  .content-image {
    height: 160px;
    object-fit: cover;
    width: 100%;
  }
  
  .content-type-badge {
    position: absolute;
    top: 12px;
    right: 12px;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.75rem;
  }
  
  .filter-pill {
    transition: all 0.3s ease;
  }
  
  .filter-pill.active {
    background-color: var(--color-primary);
    color: white;
  }
  
  .filter-pill:not(.active):hover {
    background-color: #e2e8f0;
  }
</style>

<div class="container mx-auto px-4 py-8">
  <div class="mb-6">
    <div class="flex items-center">
      <a href="/training" class="text-primary hover:text-primary-dark mr-4">
        <i class="fas fa-arrow-right"></i> العودة إلى المواد التدريبية
      </a>
    </div>
  </div>

  <div class="mb-6">
    <% 
      // Safe initialization of type variables
      let currentType = '';
      let contentTypeArabic = 'محتوى تدريبي';
      
      if (typeof contentType !== 'undefined') {
        currentType = contentType;
        
        // Set Arabic label based on content type
        if (currentType === 'article') {
          contentTypeArabic = 'المقالات';
        } else if (currentType === 'video') {
          contentTypeArabic = 'الفيديوهات';
        } else if (currentType === 'document') {
          contentTypeArabic = 'المستندات';
        } else if (currentType === 'audio') {
          contentTypeArabic = 'الصوتيات';
        }
      }
    %>
    <h1 class="text-3xl font-bold text-gray-800 mb-2"><%= contentTypeArabic %></h1>
    <p class="text-gray-600">تصفح <%= contentTypeArabic %> المتاحة في منصة راحة</p>
  </div>

  <!-- Search Bar -->
  <div class="mb-8">
    <form action="/training/search" method="GET" class="flex">
      <input type="text" name="query" placeholder="ابحث عن مواد تدريبية..." class="flex-grow px-4 py-2 border border-gray-300 rounded-r-md focus:ring-primary focus:border-primary" required>
      <button type="submit" class="px-4 py-2 bg-primary text-white rounded-l-md hover:bg-primary-dark">بحث</button>
    </form>
  </div>

  <!-- Content Type Filters -->
  <div class="mb-8">
    <h2 class="text-xl font-semibold text-gray-800 mb-4">تصفح حسب النوع</h2>
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
      <% 
        // Initialize content types safely
        const allContentTypes = ['article', 'video', 'audio', 'document']; 
        let typeList = [];
        
        // Use provided content types if available, otherwise use default
        if (typeof contentTypes !== 'undefined' && Array.isArray(contentTypes)) {
          typeList = contentTypes;
        } else {
          typeList = allContentTypes;
        }
        
        // Map content types to Arabic labels
        const contentTypeLabels = {
          'article': 'مقالات',
          'video': 'فيديوهات',
          'audio': 'صوتيات',
          'document': 'مستندات'
        };
      %>
      
      <% typeList.forEach(type => { %>
        <a href="/training/type/<%= type %>" class="bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition text-center <%= type === currentType ? 'ring-2 ring-primary' : '' %>">
          <div class="text-3xl text-primary mb-2">
            <i class="fas fa-<%= type === 'article' ? 'newspaper' : type === 'video' ? 'video' : type === 'audio' ? 'headphones' : 'file-alt' %>"></i>
          </div>
          <span class="font-medium"><%= contentTypeLabels[type] || type %></span>
        </a>
      <% }); %>
    </div>
  </div>

  <!-- Materials by Type -->
  <div>
    <h2 class="text-xl font-semibold text-gray-800 mb-4"><%= contentTypeArabic %></h2>
    
    <% 
      // Safe initialization of materials
      let typeMaterials = [];
      if (typeof materials !== 'undefined' && Array.isArray(materials)) {
        typeMaterials = materials;
      }
      
      // Content type mappings
      const contentTypeIcons = {
        'article': 'fas fa-newspaper',
        'video': 'fas fa-video',
        'audio': 'fas fa-headphones',
        'document': 'fas fa-file-alt'
      };
      
      const contentTypeColors = {
        'article': 'text-blue-600',
        'video': 'text-red-600',
        'audio': 'text-purple-600',
        'document': 'text-green-600'
      };
      
      // Map content types to Arabic labels for items
      const contentTypeItemLabels = {
        'article': 'مقال',
        'video': 'فيديو',
        'audio': 'صوتي',
        'document': 'مستند'
      };
    %>
    
    <% if (typeMaterials && typeMaterials.length > 0) { %>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        <% typeMaterials.forEach(material => { %>
          <% 
            const type = material.content_type || currentType || 'article';
            const borderColor = contentTypeColors[type] ? contentTypeColors[type].replace('text-', 'border-') : 'border-gray-400';
            
            // Determine the URL based on content type
            let contentUrl = '/training/';
            if (type === 'video') {
              contentUrl += 'videos/' + material.id;
            } else if (type === 'document' || type === 'article') {
              contentUrl += 'documents/' + material.id;
            } else {
              contentUrl += material.id;
            }
          %>
          <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition">
            <div class="p-4">
              <div class="flex items-center text-sm text-gray-500 mb-2">
                <i class="<%= contentTypeIcons[type] %> mr-2"></i>
                <span><%= contentTypeItemLabels[type] %></span>
              </div>
              <h3 class="text-lg font-semibold mb-2"><%= material.title %></h3>
              <p class="text-gray-600 text-sm mb-4"><%= material.description.length > 100 ? material.description.substring(0, 100) + '...' : material.description %></p>
              <a href="<%= contentUrl %>" class="text-primary hover:text-primary-dark font-medium">قراءة المزيد</a>
            </div>
          </div>
        <% }); %>
      </div>
      
      <!-- Pagination if necessary -->
      <% if (typeMaterials.length > 9) { %>
      <div class="flex justify-center mt-10">
        <div class="join">
          <button class="join-item btn btn-sm">«</button>
          <button class="join-item btn btn-sm btn-active">1</button>
          <button class="join-item btn btn-sm">2</button>
          <button class="join-item btn btn-sm">3</button>
          <button class="join-item btn btn-sm">»</button>
        </div>
      </div>
      <% } %>
    <% } else { %>
      <div class="text-center py-8 bg-white rounded-lg shadow-md">
        <p class="text-gray-500">لا توجد <%= contentTypeArabic %> متاحة حالياً</p>
      </div>
    <% } %>
  </div>
</div>

<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
