<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="mb-6">
  <h1 class="text-3xl font-bold text-gray-800 mb-2">سجل الاستبيانات</h1>
  <p class="text-gray-600">عرض سجل استبيانات الضغط السابقة ومتابعة تقدمك</p>
</div>

<!-- Stress Trend Chart -->
<div class="card mb-8">
  <div class="card-header">
    <h2 class="text-xl font-semibold text-gray-800">اتجاهات مستوى الضغط</h2>
  </div>
  
  <div class="card-body">
    <% if (stressTrends && stressTrends.dates && stressTrends.dates.length > 0) { %>
      <div class="h-64">
        <canvas id="stress-chart" data-chart-data="<%= JSON.stringify(stressTrends.dates.map((date, index) => ({ survey_date: new Date(date).toLocaleDateString('ar-DZ'), average_stress: stressTrends.values[index] }))) %>"></canvas>
      </div>
    <% } else { %>
      <div class="flex flex-col items-center justify-center py-8">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        <p class="text-gray-600 mb-4">لم تقم بإجراء أي استبيانات بعد</p>
        <a href="/survey" class="btn-primary py-2 px-4 rounded-md">إجراء استبيان الآن</a>
      </div>
    <% } %>
  </div>
</div>

<!-- Survey History Table -->
<div class="card">
  <div class="card-header">
    <h2 class="text-xl font-semibold text-gray-800">سجل الاستبيانات السابقة</h2>
  </div>
  
  <div class="card-body">
    <% if (surveys && surveys.length > 0) { %>
      <div class="overflow-x-auto">
        <table class="w-full text-sm text-right">
          <thead class="text-xs text-gray-700 uppercase bg-gray-50">
            <tr>
              <th scope="col" class="px-6 py-3">التاريخ</th>
              <th scope="col" class="px-6 py-3">مستوى الضغط</th>
              <th scope="col" class="px-6 py-3">التصنيف</th>
              <th scope="col" class="px-6 py-3">الإجراءات</th>
            </tr>
          </thead>
          <tbody>
            <% surveys.forEach(survey => { 
              let stressClass = 'stress-level-low';
              let stressText = 'منخفض';
              
              if (survey.stress_level > 70) {
                stressClass = 'stress-level-high';
                stressText = 'مرتفع';
              } else if (survey.stress_level > 40) {
                stressClass = 'stress-level-medium';
                stressText = 'متوسط';
              }
            %>
              <tr class="bg-white border-b hover:bg-gray-50">
                <td class="px-6 py-4"><%= new Date(survey.completed_at).toLocaleString('ar-DZ') %></td>
                <td class="px-6 py-4 font-medium <%= stressClass %>"><%= survey.stress_level %>%</td>
                <td class="px-6 py-4"><span class="<%= stressClass %>"><%= stressText %></span></td>
                <td class="px-6 py-4">
                  <a href="/survey/result/<%= survey.id %>" class="text-primary hover:text-primary-dark">عرض التفاصيل</a>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    <% } else { %>
      <div class="flex flex-col items-center justify-center py-8">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        <p class="text-gray-600 mb-4">لم تقم بإجراء أي استبيانات بعد</p>
        <a href="/survey" class="btn-primary py-2 px-4 rounded-md">إجراء استبيان الآن</a>
      </div>
    <% } %>
  </div>
</div>

<div class="mt-6">
  <a href="/survey" class="btn-primary py-2 px-4 rounded-md">إجراء استبيان جديد</a>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const chartCanvas = document.getElementById('stress-chart');
  if (!chartCanvas) return;

  const chartData = JSON.parse(chartCanvas.dataset.chartData || '[]');
  // Filter out days with 0 stress level (no surveys)
  const filteredData = chartData.filter(item => item.average_stress > 0);
  if (filteredData.length === 0) return;

  // Prepare data for the chart
  const labels = filteredData.map(item => item.survey_date);
  const stressLevels = filteredData.map(item => item.average_stress);

  // Create gradient fill
  const ctx = chartCanvas.getContext('2d');
  const gradient = ctx.createLinearGradient(0, 0, 0, 400);
  gradient.addColorStop(0, 'rgba(59, 130, 246, 0.5)');
  gradient.addColorStop(1, 'rgba(59, 130, 246, 0.0)');

  // Configure and create the chart
  new Chart(ctx, {
    type: 'line',
    data: {
      labels: labels,
      datasets: [{
        label: 'مستوى الضغط',
        data: stressLevels,
        borderColor: '#3b82f6',
        borderWidth: 2,
        tension: 0.4,
        fill: true,
        backgroundColor: gradient,
        pointBackgroundColor: '#3b82f6',
        pointBorderColor: '#fff',
        pointBorderWidth: 2,
        pointRadius: 4,
        pointHoverRadius: 6
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          display: false
        },
        tooltip: {
          backgroundColor: '#1e293b',
          titleColor: '#fff',
          bodyColor: '#fff',
          padding: 12,
          displayColors: false,
          callbacks: {
            label: function(context) {
              return `مستوى الضغط: ${context.parsed.y}%`;
            }
          }
        }
      },
      scales: {
        x: {
          grid: {
            display: false
          },
          ticks: {
            font: {
              family: 'Cairo'
            }
          }
        },
        y: {
          beginAtZero: true,
          max: 100,
          grid: {
            color: 'rgba(0, 0, 0, 0.05)'
          },
          ticks: {
            font: {
              family: 'Cairo'
            },
            callback: function(value) {
              return value + '%';
            }
          }
        }
      },
      interaction: {
        intersect: false,
        mode: 'index'
      }
    }
  });
});
</script>
